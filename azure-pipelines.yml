trigger:
  branches:
    include:
      - main
      - development
  paths:
    include:
      - frontend/*

    exclude:
      - README.md
      - azure-pipelines.yml

variables:
  - group: react-app-dev

  - name: "rootDir"
    value: "frontend"

  - name: "buildDir"
    value: "$(rootDir)/build"

  - name: "vmImageName"
    value: "ubuntu-latest"

  - name: "environmentName"
    value: "dev"

    # rootDir: "frontend"
    # buildDir: "$(rootDir)/build"

    # azureRmConnection: "d896384a-d76c-42e5-abac-bc998e3835ec"

    # Azure Resource Manager connection created during pipeline creation
    # azureSubscription: "service-connection-react"

    # # Web app name
    # webAppName: "az-react-sample"

    # # Environment name
    # environmentName: "dev"

    # vmImageName: "ubuntu-latest"

pool:
  vmImage: "$(vmImageName)"

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "12.x"
            displayName: "Install Node.js"

          - script: |
              cd $(rootDir)
              npm install
              npm run build
              cd ..
            displayName: "npm install and build"

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: "$(buildDir)"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"

      - job: CopyFile
        steps:
          - task: CopyFiles@2
            displayName: "Copy infra ARM template"
            inputs:
              SourceFolder: "$(System.DefaultWorkingDirectory)"
              Contents: |
                **/*.json
              TargetFolder: "$(Build.ArtifactStagingDirectory)"

  - stage: infra
    displayName: Create Resources
    jobs:
      - job: BuildJob
        steps:
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: "ARM Template deployment: Resource Group scope"
            inputs:
              azureResourceManagerConnection: "$(azureSubscription-$(environmentName))"
              subscriptionId: "2443494e-9961-400c-8bbc-e47a009022ab"
              resourceGroupName: "az-ci-cd-$(environmentName)"
              location: "West Europe"
              csmFile: "$(System.DefaultWorkingDirectory)/_salih18.az-ci-cd-react-app/drop/infra.json"

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: "Azure App Service Deploy: $(webAppName)"
                  inputs:
                    azureSubscription: "$(azureSubscription-$(environmentName))"
                    appType: webAppLinux
                    WebAppName: "$(webAppName)-$(environmentName)"
                    packageForLinux: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
                    RuntimeStack: "NODE|12.0"
                    StartupCommand: "pm2 serve /home/site/wwwroot --no-daemon --spa"
                    # ScriptType: "Inline Script"
                    # InlineScript: |
                    #   npm install
                    #   npm run build --if-present
