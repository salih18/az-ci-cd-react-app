trigger:
  branches:
    include:
      - main
      - development
  paths:
    include:
      - client/*

    exclude:
      - README.md
      - azure-pipelines.yml

variables:
  rootDir: "client"
  buildDir: "$(rootDir)/build"

  azureRmConnection:
    - name: "Id"
      value: "service-connection-react"

      # Azure Resource Manager connection created during pipeline creation
  azureSubscription: "$(azureRmConnection.Id)"

  # Web app name
  webAppName: "az-react-sample"

  # Environment name
  environmentName: "dev"

  vmImageName: "ubuntu-latest"

pool:
  vmImage: "$(vmImageName)"

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "10.x"
            displayName: "Install Node.js"

          - script: |
              cd $(rootDir)
              npm install
              npm run build
              cd ..
            displayName: "npm install and build"

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: "$(buildDir)"
              includeRootFolder: false
              archiveType: "zip"
              archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: "Azure App Service Deploy: $(webAppName)"
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    WebAppName: $(webAppName)
                    packageForLinux: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
                    RuntimeStack: "NODE|10.10"
                    StartupCommand: "npm run start"
                    ScriptType: "Inline Script"
                    InlineScript: |
                      npm install
                      npm run build --if-present
